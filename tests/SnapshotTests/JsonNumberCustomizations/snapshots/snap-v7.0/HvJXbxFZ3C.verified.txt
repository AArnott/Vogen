[  
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618

// Suppress warnings for 'Override methods on comparable types'.
#pragma warning disable CA1036

// Suppress Error MA0097 : A class that implements IComparable<T> or IComparable should override comparison operators
#pragma warning disable MA0097

// Suppress warning for 'The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.'
// The generator copies signatures from the BCL, e.g. for `TryParse`, and some of those have nullable annotations.
#pragma warning disable CS8669

// Suppress warnings about CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable CS1591

namespace generator;

public class VogenTypesFactory : global::System.Text.Json.Serialization.JsonConverterFactory
{
    public VogenTypesFactory() { }
    private static readonly global::System.Collections.Generic.Dictionary<global::System.Type, global::System.Lazy<global::System.Text.Json.Serialization.JsonConverter>> _lookup = 
        new global::System.Collections.Generic.Dictionary<global::System.Type, global::System.Lazy<global::System.Text.Json.Serialization.JsonConverter>> {
                { typeof(Whatever.stj_number_as_string_public_partial_classConversions_SystemTextJsonstring), new global::System.Lazy<global::System.Text.Json.Serialization.JsonConverter>(() => new Whatever.stj_number_as_string_public_partial_classConversions_SystemTextJsonstring.stj_number_as_string_public_partial_classConversions_SystemTextJsonstringSystemTextJsonConverter()) }
        };
    
    public override bool CanConvert(global::System.Type typeToConvert) => _lookup.ContainsKey(typeToConvert);
    
    public override global::System.Text.Json.Serialization.JsonConverter CreateConverter(global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options) =>
        _lookup[typeToConvert].Value;
}
  
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618

// Suppress warnings for 'Override methods on comparable types'.
#pragma warning disable CA1036

// Suppress Error MA0097 : A class that implements IComparable<T> or IComparable should override comparison operators
#pragma warning disable MA0097

// Suppress warning for 'The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.'
// The generator copies signatures from the BCL, e.g. for `TryParse`, and some of those have nullable annotations.
#pragma warning disable CS8669

// Suppress warnings about CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable CS1591

using Vogen;

namespace Whatever
{

    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage] 
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "1.0.0.0")]
    [global::System.Text.Json.Serialization.JsonConverter(typeof(stj_number_as_string_public_partial_classConversions_SystemTextJsonstringSystemTextJsonConverter))]

    [global::System.Diagnostics.DebuggerTypeProxyAttribute(typeof(stj_number_as_string_public_partial_classConversions_SystemTextJsonstringDebugView))]
    [global::System.Diagnostics.DebuggerDisplayAttribute("Underlying type: System.String, Value = { _value }")]
    public partial class stj_number_as_string_public_partial_classConversions_SystemTextJsonstring : global::System.IEquatable<stj_number_as_string_public_partial_classConversions_SystemTextJsonstring>, global::System.IEquatable<System.String> ,  global::System.IComparable<stj_number_as_string_public_partial_classConversions_SystemTextJsonstring>, global::System.IComparable,  global::System.IParsable<stj_number_as_string_public_partial_classConversions_SystemTextJsonstring>
    {
#if DEBUG   
        private readonly global::System.Diagnostics.StackTrace _stackTrace = null;
#endif
        private readonly global::System.Boolean _isInitialized;
        private readonly System.String _value;
        
/// <summary>
/// Gets the underlying <see cref="System.String" /> value if set, otherwise a <see cref="ValueObjectValidationException" /> is thrown.
/// </summary>
public System.String Value
        {
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            get
            {
                EnsureInitialized();
                return _value;
            }
        }


        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public stj_number_as_string_public_partial_classConversions_SystemTextJsonstring()
        {
#if DEBUG
            _stackTrace = new global::System.Diagnostics.StackTrace();
#endif
            _isInitialized = false;
            _value = default;
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        private stj_number_as_string_public_partial_classConversions_SystemTextJsonstring(System.String value)
        {
            _value = value;
            _isInitialized = true;
        }

        /// <summary>
        /// Builds an instance from the provided underlying type.
        /// </summary>
        /// <param name="value">The underlying type.</param>
        /// <returns>An instance of this type.</returns>
        public static stj_number_as_string_public_partial_classConversions_SystemTextJsonstring From(System.String value)
        {
                        if (value is null)
            {
                throw new global::Vogen.ValueObjectValidationException("Cannot create a value object with null.");
            }


            

            

            stj_number_as_string_public_partial_classConversions_SystemTextJsonstring instance = new stj_number_as_string_public_partial_classConversions_SystemTextJsonstring(value);

            return instance;
        }

        /// <summary>
/// Tries to build an instance from the provided underlying type.
/// If a normalization method is provided, it will be called.
/// If validation is provided, and it fails, false will be returned.
/// </summary>
/// <param name="value">The underlying type.</param>
/// <param name="vo">An instance of the value object.</param>
/// <returns>True if the value object can be built, otherwise false.</returns>
public static bool TryFrom(System.String value, 
#if NETCOREAPP3_0_OR_GREATER
[global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)]
#endif
 out stj_number_as_string_public_partial_classConversions_SystemTextJsonstring vo)
{
                if (value is null)
            {
                vo = default;
                return false;
            }

    

    

    vo = new stj_number_as_string_public_partial_classConversions_SystemTextJsonstring(value);

    return true;
}/// <summary>
/// Tries to build an instance from the provided underlying value.
/// If a normalization method is provided, it will be called.
/// If validation is provided, and it fails, an error will be returned.
/// </summary>
/// <param name="value">The primitive value.</param>
/// <returns>A <see cref="ValueObjectOrError{T}"/> containing either the value object, or an error.</returns>
public static ValueObjectOrError<stj_number_as_string_public_partial_classConversions_SystemTextJsonstring> TryFrom(System.String value)
{
                if (value is null)
            {
                return new ValueObjectOrError<stj_number_as_string_public_partial_classConversions_SystemTextJsonstring>(Validation.Invalid("The value provided was null"));
            }


    

    

    return new ValueObjectOrError<stj_number_as_string_public_partial_classConversions_SystemTextJsonstring>(new stj_number_as_string_public_partial_classConversions_SystemTextJsonstring(value));
}

        public bool IsInitialized() => _isInitialized;

          

        // only called internally when something has been deserialized into
        // its primitive type.
        private static stj_number_as_string_public_partial_classConversions_SystemTextJsonstring __Deserialize(System.String value)
        {
                        if (value is null)
            {
                throw new global::Vogen.ValueObjectValidationException("Cannot create a value object with null.");
            }


            

            

            return new stj_number_as_string_public_partial_classConversions_SystemTextJsonstring(value);
        }
        
            public  global::System.Boolean Equals(stj_number_as_string_public_partial_classConversions_SystemTextJsonstring other)
            {
              if (ReferenceEquals(null, other))
              {
                  return false;
              }

              // It's possible to create uninitialized instances via converters such as EfCore (HasDefaultValue), which call Equals.
              // We treat anything uninitialized as not equal to anything, even other uninitialized instances of this type.
              if(!_isInitialized || !other._isInitialized) return false;

              if (ReferenceEquals(this, other))
              {
                  return true;
              }

              return GetType() == other.GetType() && global::System.Collections.Generic.EqualityComparer<System.String>.Default.Equals(Value, other.Value);
            }
             public global::System.Boolean Equals(stj_number_as_string_public_partial_classConversions_SystemTextJsonstring other, global::System.Collections.Generic.IEqualityComparer<stj_number_as_string_public_partial_classConversions_SystemTextJsonstring> comparer)
             {
                 return comparer.Equals(this, other);
             }

             
            public global::System.Boolean Equals(System.String primitive)
            {
              return Value.Equals(primitive);
            }

            public global::System.Boolean Equals(System.String primitive, global::System.StringComparer comparer) 
            {
                return comparer.Equals(Value, primitive);
            }
 public override global::System.Boolean Equals(global::System.Object obj)
 {
     return Equals(obj as stj_number_as_string_public_partial_classConversions_SystemTextJsonstring);
 }

        public static global::System.Boolean operator ==(stj_number_as_string_public_partial_classConversions_SystemTextJsonstring left, stj_number_as_string_public_partial_classConversions_SystemTextJsonstring right) => Equals(left, right);
        public static global::System.Boolean operator !=(stj_number_as_string_public_partial_classConversions_SystemTextJsonstring left, stj_number_as_string_public_partial_classConversions_SystemTextJsonstring right) => !Equals(left, right);

        public static global::System.Boolean operator ==(stj_number_as_string_public_partial_classConversions_SystemTextJsonstring left, System.String right) => Equals(left.Value, right);
        public static global::System.Boolean operator !=(stj_number_as_string_public_partial_classConversions_SystemTextJsonstring left, System.String right) => !Equals(left.Value, right);

        public static global::System.Boolean operator ==(System.String left, stj_number_as_string_public_partial_classConversions_SystemTextJsonstring right) => Equals(left, right.Value);
        public static global::System.Boolean operator !=(System.String left, stj_number_as_string_public_partial_classConversions_SystemTextJsonstring right) => !Equals(left, right.Value);

        public static explicit operator stj_number_as_string_public_partial_classConversions_SystemTextJsonstring(System.String value) => From(value);
        public static explicit operator System.String(stj_number_as_string_public_partial_classConversions_SystemTextJsonstring value) => value.Value;

        public int CompareTo(stj_number_as_string_public_partial_classConversions_SystemTextJsonstring other) => Value.CompareTo(other.Value);
        public int CompareTo(object other) {
            if(other is null) return 1;
            if(other is stj_number_as_string_public_partial_classConversions_SystemTextJsonstring x) return CompareTo(x);
            throw new global::System.ArgumentException("Cannot compare to object as it is not of type stj_number_as_string_public_partial_classConversions_SystemTextJsonstring", nameof(other));
        }

        
    /// <summary>
    /// </summary>
    /// <returns>
    /// True if the value passes any validation (after running any optional normalization).
    /// </returns>
    public static global::System.Boolean TryParse(global::System.String s, global::System.IFormatProvider provider, 
#if NETCOREAPP3_0_OR_GREATER
[global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)]
#endif
 out stj_number_as_string_public_partial_classConversions_SystemTextJsonstring result) {
            
            
            result = new stj_number_as_string_public_partial_classConversions_SystemTextJsonstring(s);
            return true;
    }
    /// <summary>
    /// </summary>
    /// <returns>
    /// The value created via the <see cref="From"/> method.
    /// </returns>
    /// <exception cref="ValueObjectValidationException">Thrown when the value can be parsed, but is not valid.</exception>
    public static stj_number_as_string_public_partial_classConversions_SystemTextJsonstring Parse(global::System.String s, global::System.IFormatProvider provider) {
        return From(s);
    }


          public override global::System.Int32 GetHashCode()
          {
            unchecked // Overflow is fine, just wrap
            {
                global::System.Int32 hash = (global::System.Int32) 2166136261;
                hash = (hash * 16777619) ^ GetType().GetHashCode();
                hash = (hash * 16777619) ^ global::System.Collections.Generic.EqualityComparer<System.String>.Default.GetHashCode(Value);
                return hash;
            }
          }

        private void EnsureInitialized()
        {
            if (!_isInitialized)
            {
#if DEBUG
                global::System.String message = "Use of uninitialized Value Object at: " + _stackTrace ?? "";
#else
                global::System.String message = "Use of uninitialized Value Object.";
#endif

                throw new global::Vogen.ValueObjectValidationException(message);
            }
        }


        

        /// <summary>Returns the string representation of the underlying <see cref="System.String" />.</summary>
    public override global::System.String ToString() =>_isInitialized ? Value.ToString() : "[UNINITIALIZED]";

        
        /// <summary>
        /// Converts a stj_number_as_string_public_partial_classConversions_SystemTextJsonstring to or from JSON.
        /// </summary>
        public class stj_number_as_string_public_partial_classConversions_SystemTextJsonstringSystemTextJsonConverter : global::System.Text.Json.Serialization.JsonConverter<stj_number_as_string_public_partial_classConversions_SystemTextJsonstring>
        {
            public override stj_number_as_string_public_partial_classConversions_SystemTextJsonstring Read(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
            {
                return stj_number_as_string_public_partial_classConversions_SystemTextJsonstring.__Deserialize(reader.GetString());
            }

            public override void Write(System.Text.Json.Utf8JsonWriter writer, stj_number_as_string_public_partial_classConversions_SystemTextJsonstring value, global::System.Text.Json.JsonSerializerOptions options)
            {
                writer.WriteStringValue(value.Value);
            }

#if NET6_0_OR_GREATER
            public override stj_number_as_string_public_partial_classConversions_SystemTextJsonstring ReadAsPropertyName(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
            {
                return stj_number_as_string_public_partial_classConversions_SystemTextJsonstring.__Deserialize(reader.GetString());
            }

            public override void WriteAsPropertyName(System.Text.Json.Utf8JsonWriter writer, stj_number_as_string_public_partial_classConversions_SystemTextJsonstring value, global::System.Text.Json.JsonSerializerOptions options)
            {
                writer.WritePropertyName(value.Value);
            }
#endif            
        }







        internal sealed class stj_number_as_string_public_partial_classConversions_SystemTextJsonstringDebugView
        {
            private readonly stj_number_as_string_public_partial_classConversions_SystemTextJsonstring _t;

            stj_number_as_string_public_partial_classConversions_SystemTextJsonstringDebugView(stj_number_as_string_public_partial_classConversions_SystemTextJsonstring t)
            {
                _t = t;
            }

            public global::System.String UnderlyingType => "System.String";
            public System.String Value => _t.Value ;

            public global::System.String Conversions => @"[global::System.Text.Json.Serialization.JsonConverter(typeof(stj_number_as_string_public_partial_classConversions_SystemTextJsonstringSystemTextJsonConverter))]
";
                }
    }

}
]