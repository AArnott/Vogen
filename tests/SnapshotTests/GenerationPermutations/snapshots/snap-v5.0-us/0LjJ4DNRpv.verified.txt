// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618

// Suppress warnings for 'Override methods on comparable types'.
#pragma warning disable CA1036

// Suppress Error MA0097 : A class that implements IComparable<T> or IComparable should override comparison operators
#pragma warning disable MA0097

// Suppress warning for 'The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.'
// The generator copies signatures from the BCL, e.g. for `TryParse`, and some of those have nullable annotations.
#pragma warning disable CS8669

// Suppress warnings about CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable CS1591

using Vogen;

namespace Whatever
{

    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage] 
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "1.0.0.0")]
    [global::System.Text.Json.Serialization.JsonConverter(typeof(public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstringSystemTextJsonConverter))]
[global::Newtonsoft.Json.JsonConverter(typeof(public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstringNewtonsoftJsonConverter))]

    [global::System.Diagnostics.DebuggerTypeProxyAttribute(typeof(public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstringDebugView))]
    [global::System.Diagnostics.DebuggerDisplayAttribute("Underlying type: System.String, Value = { _value }")]
    public partial record struct public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring  :  global::System.IComparable<public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring>, global::System.IComparable
    {
#if DEBUG    
        private readonly global::System.Diagnostics.StackTrace _stackTrace = null;
#endif

        private readonly global::System.Boolean _isInitialized;
        
        private readonly System.String _value;

        /// <summary>
        /// Gets the underlying <see cref="System.String" /> value if set, otherwise a <see cref="ValueObjectValidationException" /> is thrown.
        /// </summary>
        public readonly System.String Value
        {
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            get
            {
                EnsureInitialized();
                return _value;
            }
            init
            {
                            if (value is null)
            {
                throw new global::Vogen.ValueObjectValidationException("Cannot create a value object with null.");
            }


                

                

                _value = value;
            }
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring()
        {
#if DEBUG
            _stackTrace = new global::System.Diagnostics.StackTrace();
#endif

            _isInitialized = false;
            _value = default;
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        private public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring(System.String value) 
        {
            _value = value;
            _isInitialized = true;
        }

        /// <summary>
        /// Builds an instance from the provided underlying type.
        /// </summary>
        /// <param name="value">The underlying type.</param>
        /// <returns>An instance of this type.</returns>
        public static public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring From(System.String value)
        {
            

            public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring instance = new public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring(value);

            

            return instance;
        }

        public static explicit operator public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring(System.String value) => From(value);
        public static explicit operator System.String(public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring value) => value.Value;

        public int CompareTo(public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring other) => Value.CompareTo(other.Value);
        public int CompareTo(object other) {
            if(other == null) return 1;
            if(other is public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring x) return CompareTo(x);
            throw new global::System.ArgumentException("Cannot compare to object as it is not of type public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring", nameof(other));
        }

        // only called internally when something has been deserialized into
        // its primitive type.
        private static public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring Deserialize(System.String value)
        {
            

            

            return new public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring(value);
        }

        private readonly void EnsureInitialized()
        {
            if (!_isInitialized)
            {
#if DEBUG
                global::System.String message = "Use of uninitialized Value Object at: " + _stackTrace ?? "";
#else
                global::System.String message = "Use of uninitialized Value Object.";
#endif

                throw new global::Vogen.ValueObjectValidationException(message);
            }
        }

        // record enumerates fields - we just want our Value and to throw if it's not initialized.
        /// <summary>Returns the string representation of the underlying <see cref="System.String" />.</summary>
    /// <inheritdoc cref="System.String.ToString()" />
    public override global::System.String ToString() => Value.ToString();

        
 
        
        class public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstringSystemTextJsonConverter : global::System.Text.Json.Serialization.JsonConverter<public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring>
        {
            public override public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring Read(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
            {
                return public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring.Deserialize(reader.GetString());
            }

            public override void Write(System.Text.Json.Utf8JsonWriter writer, public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring value, global::System.Text.Json.JsonSerializerOptions options)
            {
                writer.WriteStringValue(value.Value);
            }
        }

        class public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstringNewtonsoftJsonConverter : Newtonsoft.Json.JsonConverter
        {
            public override bool CanConvert(System.Type objectType)
            {
                return objectType == typeof(public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring);
            }

            public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer)
            {
                var id = (public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring)value;
                serializer.Serialize(writer, id.Value);
            }

            public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer)
            {
                var result = serializer.Deserialize<global::System.String>(reader);
                return result != null ? public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring.Deserialize(result) : null;
            }
        }






        internal sealed class public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstringDebugView
        {
            private readonly public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring _t;

            public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstringDebugView(public_partial_record_structConversions_NewtonsoftJson___Conversions_SystemTextJsonstring t)
            {
                _t = t;
            }

            public global::System.Boolean IsInitialized => _t._isInitialized;
            public global::System.String UnderlyingType => "System.String";
            public global::System.String Value => _t._isInitialized ? _t._value.ToString() : "[not initialized]" ;

            #if DEBUG
            public global::System.String CreatedWith => _t._stackTrace?.ToString() ?? "the From method";
            #endif

            public global::System.String Conversions => @"NewtonsoftJson, SystemTextJson";
                }

}
}