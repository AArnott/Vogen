// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618

// Suppress warnings about CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable CS1591

using Vogen;

namespace Whatever
{

    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage] 
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "1.0.0.0")]
    
    [global::System.Diagnostics.DebuggerTypeProxyAttribute(typeof(public_readonly_partial_structConversions_EfCoreValueConverterSystemDebugView))]
    [global::System.Diagnostics.DebuggerDisplayAttribute("Underlying type: System.DateTime, Value = { _value }")]
    public readonly partial struct public_readonly_partial_structConversions_EfCoreValueConverterSystem : global::System.IEquatable<public_readonly_partial_structConversions_EfCoreValueConverterSystem>
    {
#if DEBUG    
        private readonly global::System.Diagnostics.StackTrace _stackTrace = null;
#endif

        private readonly global::System.Boolean _isInitialized;
        
        private readonly System.DateTime _value;

        /// <summary>
        /// Gets the underlying <see cref="System.DateTime" /> value if set, otherwise a <see cref="ValueObjectValidationException" /> is thrown.
        /// </summary>
        public readonly System.DateTime Value
        {
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            get
            {
                EnsureInitialized();
                return _value;
            }
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public public_readonly_partial_structConversions_EfCoreValueConverterSystem()
        {
#if DEBUG
            _stackTrace = new global::System.Diagnostics.StackTrace();
#endif

            _isInitialized = false;
            _value = default;
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        private public_readonly_partial_structConversions_EfCoreValueConverterSystem(System.DateTime value) 
        {
            _value = value;
            _isInitialized = true;
        }

        /// <summary>
        /// Builds an instance from the provided underlying type.
        /// </summary>
        /// <param name="value">The underlying type.</param>
        /// <returns>An instance of this type.</returns>
        public static public_readonly_partial_structConversions_EfCoreValueConverterSystem From(System.DateTime value)
        {
            

            public_readonly_partial_structConversions_EfCoreValueConverterSystem instance = new public_readonly_partial_structConversions_EfCoreValueConverterSystem(value);

            

            return instance;
        }

        public static explicit operator public_readonly_partial_structConversions_EfCoreValueConverterSystem(System.DateTime value) => From(value);
        public static explicit operator System.DateTime(public_readonly_partial_structConversions_EfCoreValueConverterSystem value) => value.Value;

        // only called internally when something has been deserialized into
        // its primitive type.
        private static public_readonly_partial_structConversions_EfCoreValueConverterSystem Deserialize(System.DateTime value)
        {
            

            

            return new public_readonly_partial_structConversions_EfCoreValueConverterSystem(value);
        }

        public readonly global::System.Boolean Equals(public_readonly_partial_structConversions_EfCoreValueConverterSystem other)
        {
            // It's possible to create uninitialized instances via converters such as EfCore (HasDefaultValue), which call Equals.
            // We treat anything uninitialized as not equal to anything, even other uninitialized instances of this type.
            if(!_isInitialized || !other._isInitialized) return false;

            return global::System.Collections.Generic.EqualityComparer<System.DateTime>.Default.Equals(Value, other.Value);
        }

        public readonly global::System.Boolean Equals(System.DateTime primitive) => Value.Equals(primitive);

        public readonly override global::System.Boolean Equals(global::System.Object obj)
        {
            return obj is public_readonly_partial_structConversions_EfCoreValueConverterSystem && Equals((public_readonly_partial_structConversions_EfCoreValueConverterSystem) obj);
        }

        public static global::System.Boolean operator ==(public_readonly_partial_structConversions_EfCoreValueConverterSystem left, public_readonly_partial_structConversions_EfCoreValueConverterSystem right) => Equals(left, right);
        public static global::System.Boolean operator !=(public_readonly_partial_structConversions_EfCoreValueConverterSystem left, public_readonly_partial_structConversions_EfCoreValueConverterSystem right) => !(left == right);

        public static global::System.Boolean operator ==(public_readonly_partial_structConversions_EfCoreValueConverterSystem left, System.DateTime right) => Equals(left.Value, right);
        public static global::System.Boolean operator !=(public_readonly_partial_structConversions_EfCoreValueConverterSystem left, System.DateTime right) => !Equals(left.Value, right);

        public static global::System.Boolean operator ==(System.DateTime left, public_readonly_partial_structConversions_EfCoreValueConverterSystem right) => Equals(left, right.Value);
        public static global::System.Boolean operator !=(System.DateTime left, public_readonly_partial_structConversions_EfCoreValueConverterSystem right) => !Equals(left, right.Value);

        public readonly override global::System.Int32 GetHashCode() => global::System.Collections.Generic.EqualityComparer<System.DateTime>.Default.GetHashCode(_value);

        /// <summary>Returns the string representation of the underlying type</summary>
    /// <inheritdoc cref="{item.UnderlyingTypeFullName}.ToString()" />
    public readonly override global::System.String ToString() => Value.ToString();

        private readonly void EnsureInitialized()
        {
            if (!_isInitialized)
            {
#if DEBUG
                global::System.String message = "Use of uninitialized Value Object at: " + _stackTrace ?? "";
#else
                global::System.String message = "Use of uninitialized Value Object.";
#endif

                throw new global::Vogen.ValueObjectValidationException(message);
            }
        }

        
 
        




        public class EfCoreValueConverter : global::Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter<public_readonly_partial_structConversions_EfCoreValueConverterSystem, global::System.DateTime>
        {
            public EfCoreValueConverter() : this(null) { }
            public EfCoreValueConverter(global::Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints = null)
                : base(
                    vo => vo.Value,
                    value => public_readonly_partial_structConversions_EfCoreValueConverterSystem.Deserialize(value),
                    mappingHints
                ) { }
        }



        internal sealed class public_readonly_partial_structConversions_EfCoreValueConverterSystemDebugView
        {
            private readonly public_readonly_partial_structConversions_EfCoreValueConverterSystem _t;

            public_readonly_partial_structConversions_EfCoreValueConverterSystemDebugView(public_readonly_partial_structConversions_EfCoreValueConverterSystem t)
            {
                _t = t;
            }

            public global::System.Boolean IsInitialized => _t._isInitialized;
            public global::System.String UnderlyingType => "System.DateTime";
            public global::System.String Value => _t._isInitialized ? _t._value.ToString() : "[not initialized]" ;

            #if DEBUG
            public global::System.String CreatedWith => _t._stackTrace?.ToString() ?? "the From method";
            #endif

            public global::System.String Conversions => @"EfCoreValueConverter";
                }

}
}